CLIENT_RIDES_GET_ALL_FUTURE=SELECT * FROM ride r WHERE (r.cancelledByClient = false OR r.cancelledByClient IS NULL) AND r.PickUpDateTime > NOW() AND r.clientId = ? AND r.executed = FALSE ORDER BY r.pickUpDateTime;

CLIENT_RIDE_CANCEL=UPDATE ride SET cancelledByClient = TRUE WHERE id = ?;

CLIENT_RIDE_CANCEL_REPEATING=UPDATE ride SET cancelledByClient = TRUE WHERE repeatingRideId = ? AND executed = 0;

CLIENT_RIDE_ADD=INSERT INTO ride(clientId, preferedCareInstitution, preferedDriver, pickUpDateTime, pickUpLocation, dropOffLocation, numberOfcompanions, numberOfLuggage, returnRide, callService, utility, repeatingRideId, cancelledByClient, distance, duration) VALUES \
(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);

CLIENT_PROFILE_GET=SELECT u.*, c.companion, c.utility, c.driverPreferenceForced from `user` AS u INNER JOIN `client` AS c ON c.clientId = u.id WHERE u.id = ?

CLIENT_CAREINSTITUTION_GET=SELECT * FROM careInstitution WHERE careInstitution.id = (SELECT careInstitutionId FROM clientCareInstitution WHERE clientId = ?);

CLIENT_PREFERED_DRIVERS_GET=SELECT u.*, d.verification, c.utility, c.numberOfPassengers FROM user u INNER JOIN driver d ON u.id = d.driverId INNER JOIN driverCar c ON u.id = c.driverId WHERE d.driverId IN (SELECT driverId FROM clientDriverPreference WHERE clientId = ?);

CLIENT_LIMITATIONS_GET=SELECT * FROM limitation WHERE name in (SELECT limitation FROM clientLimitation WHERE clientid = ?);

CLIENT_UTILITY_UPDATE=UPDATE client SET utility=? WHERE clientId=?;

CLIENT_PREFERRED_DRIVERS_UPDATE=INSERT INTO clientDriverPreference(clientId, driverId) VALUES (?, ?);

CLIENT_PREFERRED_DRIVERS_DELETE=DELETE FROM clientDriverPreference WHERE clientId=?;

CLIENT_DELETE_DRIVERPREFERENCE = DELETE FROM driverclientpreference where clientId = ?;


CLIENT_GET_ALL=SELECT * FROM client c LEFT JOIN user u on c.clientId = u.id WHERE inActiveSince is null;

CLIENT_UPDATE_PROFILE=UPDATE client SET companion = ?, utility = ?, driverPreferenceForced = ? WHERE clientId = ?;

CLIENT_RIDES_GET_ALL_COMPLETED=SELECT * FROM ride LEFT JOIN rideRating ON ride.id = rideRating.rideId WHERE clientId = ? AND executed = 1 ;

CLIENT_RIDES_GET_ALL_CANCELLED=SELECT * FROM ride WHERE clientId = ? AND cancelledByClient = 1;

DRIVER_RIDES_GET_ALL_FUTURE=SELECT * FROM ride r WHERE (r.cancelledByClient = FALSE OR r.cancelledByClient IS NULL) AND r.PickUpDateTime > NOW() AND r.driverId = ? AND r.executed=false AND r.id NOT IN (SELECT rideID FROM rideCanceledByDriver WHERE driverId = ?);

DRIVER_RIDES_GET_ALL_COMPLETED=SELECT * FROM ride WHERE driverId = ? AND executed = 1;

DRIVER_RIDES_GET_ALL_CANCELLED=SELECT r.* FROM rideCanceledByDriver c LEFT JOIN ride r ON c.rideId = r.id WHERE c.driverId = ?;

DRIVER_RIDE_ACCEPT=UPDATE ride SET driverId = ? WHERE id = ?;

DRIVER_RIDE_CANCEL=INSERT INTO rideCanceledByDriver(rideId, driverId, cancelledDate) VALUES (?, ?, NOW());

DRIVER_DELETE_FROM_PROPOSED_RIDE_WHEN_ACCEPT_RIDE=DELETE FROM rideProposedForDriver WHERE rideId = ?;
DRIVER_PROFILE_GET=SELECT * FROM user u INNER JOIN driver d ON u.id = d.driverId LEFT JOIN driverCareInstitution c ON u.id = c.driverId LEFT JOIN careInstitution ci ON c.careInstitutionId = ci.id WHERE u.id = ?;

DRIVER_CAREINSTITUTION_GET=SELECT * FROM careInstitution WHERE careInstitution.id = (SELECT careInstitutionId FROM driverCareInstitution WHERE driverId = ?);
DRIVER_UPDATE_ALL=UPDATE driver SET verification = ?, utility = ? WHERE driverId = ?;

DRIVER_PREFERRED_CLIENTS_DELETE=DELETE FROM driverClientPreference WHERE  driverId =?;

DRIVER_PREFERRED_CLIENTS_UPDATE=INSERT INTO driverClientPreference(driverId, clientId) VALUES (?, ?);

RIDE_GET=SELECT * FROM ride r WHERE r.Id = ?;

RIDE_UPDATE=UPDATE ride SET clientId = ?, preferedCareInstitution = ?, preferedDriver = ?, pickUpDateTime = ?, pickUpLocation = ?, dropOffLocation = ?, numberOfcompanions = ?, numberOfLuggage = ?, returnRide = ?, callService = ?, utility = ?, repeatingRideId = ?, cancelledByClient = ?, executed = ? WHERE id = ?;

RIDE_REPEATING_MAX_ID=SELECT MAX(repeatingRideId) AS max FROM ride;

CARE_INSTITUTION_GET=SELECT * FROM careInstitution WHERE id = ?;
CARE_INSTITUTION_GET_ALL=SELECT * FROM careInstitution;
CARE_INSTITUTION_GET_ALL_DRIVERS=SELECT * FROM driverCareInstitution d LEFT JOIN user u ON d.driverId = u.id LEFT JOIN driver dr ON d.driverId = dr.driverId WHERE d.careInstitutionId = ?;

DRIVERS_GET_ALL=SELECT * FROM driver d LEFT JOIN user u on d.driverId = u.id WHERE inActiveSince is null;

DRIVER_GET_ALL_REQUEST_RIDES=SELECT * FROM ride WHERE driverId IS NULL;

DRIVER_GET_PREFERRED_CLIENTS=SELECT u.id , u.firstname, u.lastname FROM user u WHERE u.id IN (SELECT clientId FROM driverClientPreference WHERE driverId = ?);

REMOVE_DRIVER_FROM_RIDE=UPDATE ride r SET r.driverId = NULL WHERE r.id = ?;
USER_CLIENT_CHECK=SELECT id FROM user WHERE id = (SELECT clientId FROM client WHERE clientId = ?);
USER_DRIVER_CHECK=SELECT id FROM user WHERE id = (SELECT driverId FROM driver WHERE driverId = ?);

USER_GET_PREFERENCES=SELECT settingKey, settingValue FROM userpreference WHERE userId = ?;

USER_GET_PREFERENCES_BYIDANDKEY=SELECT settingKey, settingValue FROM userpreference WHERE userId = ? AND settingKey = ?;

USER_ADD_PREFERENCES=INSERT INTO userpreference (userId, settingKey, settingValue) VALUES (?, ?, ?);

USER_UPDATE_PREFERENCES=UPDATE userpreference SET settingValue = ? WHERE userId = ? AND settingKey = ?;

RIDE_MATCHER_STATE=SELECT status FROM rideMatchesState WHERE rideId = ?;

RIDE_MATCHER_MATCHED=SELECT matched FROM rideMatchesState WHERE rideId = ?;

RIDE_MATCHER_STATE_UPDATE=REPLACE INTO rideMatchesState (rideId, status, matched) VALUES(?, ?, ?);

RIDE_MATCHER_MATCHING_UPDATE=UPDATE rideMatchesState SET matched = ? WHERE rideId = ?;

RIDE_MATCHER_MATCHES_CACHED=SELECT * FROM rideMatchesCache where rideId = ?;

RIDE_MATCHER_MATCHES_UPDATE=REPLACE INTO rideMatchesCache (rideId, driverId) VALUES (?, ?);

RIDE_MATCHER_MATCHE_DELETE=DELETE FROM  rideMatchesCache WHERE rideId = ? AND driverId = ?;

RIDE_MATCHER_MATCHES_DELETE=DELETE FROM  rideMatchesCache WHERE rideId = ?;

RIDE_MATCHER_PROPOSE_DRIVER=INSERT INTO rideProposedForDriver (rideId, driverId) VALUES (?, ?);

RIDE_MATCHER_PROPOSED_REMOVE_DRIVER=DELETE FROM rideProposedForDriver WHERE rideId = ? AND driverId = ?;

RIDE_MATCHER_MOVE_FROM_PROPOSED_TO_CACHE_COPY=INSERT INTO rideMatchesCache(rideId, driverId) SELECT rideId, driverId FROM rideProposedForDriver WHERE rideId = ?;

RIDE_MATCHER_MOVE_FROM_PROPOSED_TO_CACHE_DELETE=DELETE FROM  rideProposedForDriver WHERE rideId = ?;

RIDE_MATCHER_DRIVER_REJECT=INSERT INTO rideMatchesRejected (rideId, driverId) VALUES (?, ?);

RIDE_MATCHER_DRIVER_IS_REJECTED=SELECT driverId FROM rideMatchesRejected WHERE rideId = ? AND driverId = ?
USER_UPDATE_PROFILE=UPDATE user SET firstName = ?, lastname = ?, email = ?, phoneNumber = ?, street = ?, houseNumber = ?, zipCode = ?, residence = ?, dateOfBirth = ?, firstTimeProfileCheck = ? WHERE id = ?;

RIDE_MATCHER_CACHE_RIDE_REMOVE=DELETE FROM rideMatchesCache WHERE rideId = ?;

RIDE_MATCHER_STATE_RIDE_REMOVE=DELETE FROM rideMatchesState WHERE rideId = ?;

RIDE_MATCHER_REJECTED_RIDE_REMOVE=DELETE FROM rideMatchesRejected WHERE rideId = ?;

OAUTH_GET=SELECT * FROM oauthClient WHERE token = ? AND userId = ?;

OAUTH_POST=INSERT INTO oauthClient (token, userId) VALUES (?, ?);
USER_GET_PASSWORD_AND_USERNAME=SELECT id, password, PasswordSalt FROM `user` WHERE email = ?;

TRANSACTION_CREATE=INSERT INTO transactions (transactionId, clientId, driverId, rideId, amount, createdAt, expiresAt, status, checkoutUrl) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)

CHECK_RIDE_PAYMENT_STATUS=SELECT COUNT(*) FROM `transactions` t WHERE t.`status` = ? AND t.rideId = ?

GET_RIDE_PAYMENT_BY_ID=SELECT * FROM `transactions` t WHERE t.rideId = ? AND t.status = 0

UPDATE_RIDE_PAYMENT_STATUS=UPDATE transactions t SET t.status = ? WHERE t.transactionId = ?;

RIDE_ADD_RATING=INSERT INTO rideRating (rideId, rating, message, timestamp) VAlUES (?, ?, ?, ?);

RIDE_GET_RATING=SELECT * from rideRating WHERE rideId = ?;

RIDE_GET_ALL_RATINGS_BY_DRIVER=SELECT R.rideId, R.rating, R.message, R.`timestamp` FROM rideRating AS R JOIN ride AS M on R.rideId = M.id WHERE M.driverId = ?;

RIDE_PUT_RATING=UPDATE rideRating SET rating = ?, message = ?, `timestamp` = ? WHERE rideId = ?;

RIDE_DELETE_RATING=DELETE FROM rideRating WHERE rideId = ?;

RIDE_GET_CURRENT=SELECT * FROM ride LEFT JOIN `rideRating` AS rate ON ride.id = rate.rideId WHERE clientId = ? && started = 1 && executed = 0 && cancelledByClient = 0 ORDER BY pickUpDateTime

RIDE_POST_START=UPDATE ride SET started = 1 WHERE id = ?;

CREATE_USER=INSERT INTO user (firstName, lastName, email, phoneNumber, street, houseNumber, zipCode, residence, dateOfBirth) VALUES (?,?,?,?,?,?,?,?,?);
GET_ALL_DRIVERS_CAREINSTITUTION=SELECT * FROM user u INNER JOIN driver d ON u.id = d.driverId LEFT JOIN driverCareInstitution c ON u.id = c.driverId LEFT JOIN careInstitution ci ON c.careInstitutionId = ci.id INNER JOIN drivercar dc ON d.driverId=dc.driverId WHERE u.inActiveSince IS NULL AND c.careinstitutionId = ?;
GET_ALL_DRIVERS_TOWNSHIP=SELECT * FROM user u INNER JOIN driver d ON u.id = d.driverId LEFT JOIN driverCareInstitution c ON u.id = c.driverId LEFT JOIN careInstitution ci ON c.careInstitutionId = ci.id INNER JOIN drivercar dc ON d.driverId=dc.driverId WHERE u.inActiveSince IS NULL AND u.residence = ?;
GET_DRIVER =SELECT * FROM user u INNER JOIN driver d ON u.id = d.driverId LEFT JOIN driverCareInstitution c ON u.id = c.driverId LEFT JOIN careInstitution ci ON c.careInstitutionId = ci.id INNER JOIN drivercar dc ON d.driverId=dc.driverId WHERE u.id = ?;
GET_ALL_DRIVERS = SELECT * FROM user u INNER JOIN driver d ON u.id = d.driverId LEFT JOIN driverCareInstitution c ON u.id = c.driverId LEFT JOIN careInstitution ci ON c.careInstitutionId = ci.id INNER JOIN drivercar dc ON d.driverId=dc.driverId WHERE u.inActiveSince IS NULL;
SET_DRIVER = INSERT INTO driver (driverId, verification) VALUES (?,?);
ADD_DRIVER_TO_CAREINSITUTION = INSERT INTO drivercareinstitution (driverId, careInstitutionId) VALUES (?,?);
SET_DRIVER_CARE_INFO = INSERT INTO drivercar(driverId, utility, numberPlate, numberOfPassengers) VALUES (?,?,?,?);
GET_USER_ID = SELECT * FROM user WHERE firstName=? AND lastName=? AND email=? AND phoneNumber=? AND street=? AND houseNumber=? AND zipCode=? AND residence=?;

RIDES_GET_ALL=SELECT * FROM ride;
RIDES_GET_ALL_TOWNSHIP=SELECT * FROM ride WHERE pickUpLocation LIKE '%' ? '%';
RIDES_GET_ALL_CAREINSITUTION=SELECT * FROM ride WHERE preferedCareInstitution = ?;
CLIENT_ADD_LIMITATION=INSERT INTO clientlimitation(clientId, limitation) VALUES (?, ?);
CLIENT_DELETE_LIMITATION=DELETE FROM clientlimitation WHERE  clientId =?;
CLIENTS_GET_ALL=SELECT * FROM  client c INNER JOIN user u ON c.clientId = u.id INNER JOIN clientcareinstitution cc on c.clientId = cc.clientId WHERE u.inactiveSince is null AND cc.careInstitutionId = ?;
CLIENT_GET = SELECT * FROM  client c INNER JOIN user u ON c.clientId = u.id LEFT JOIN clientlimitation cl ON c.clientId = cl.clientId WHERE u.id = ?;
CLIENT_ADD=INSERT INTO Client(clientId, companion, utility, driverPreferenceForced) VALUES(?, ?, ?, ?);
USER_ADD=INSERT INTO User(firstName, lastName, email, phoneNumber, street, houseNumber, zipCode, residence, dateOfBirth) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
ADD_CLIENT_TO_CAREINSTITUTION = INSERT INTO `clientcareinstitution`(clientId, careInstitutionId) VALUES(?, ?)
ADD_LIMITATION_TO_CLIENT= INSERT INTO `clientlimitation` (`clientId`, `limitation`) VALUES (?, ?);
ADD_UTILITY_TO_CLIENT= INSERT INTO `clientutility` (`clientId`, `utility`) VALUES (?, ?);
CLIENT_UPDATE=UPDATE Client SET Companion = ?, utility = ? WHERE clientId = ?;
USER_UPDATE=UPDATE User SET firstName = ?, lastName = ?, email = ?, phoneNumber = ?, street = ?, houseNumber = ?, zipCode = ?, residence = ?, dateOfBirth = ? WHERE id = ?;
LIMITATIONS_GET = SELECT * FROM limitation;
UTILITIES_GET = SELECT * FROM UTILITY;
CLIENT_UTILITIES_GET=SELECT * FROM clientutility WHERE clientId = ?;
CLIENT_CHECK_RIDES=SELECT * FROM ride r WHERE r.clientId = ?;
CLIENTUTILITY_DELETE = DELETE FROM clientutility where clientId = ?;
CLIENTLIMITATION_DELETE = DELETE FROM clientlimitation where clientId = ?;
CLIENTDRIVERPREFERENCE_DELETE = DELETE FROM clientdriverpreference where clientId = ?;
CLIENTCAREINSTITUTION_DELETE = DELETE FROM clientcareinstitution where clientId = ?;
CLIENT_DELETE = DELETE FROM client where clientId = ?;
USER_DELETE = DELETE FROM user where id = ?;
USER_SET_ISINACTIVESINCE = UPDATE user SET inActiveSince = CURDATE() WHERE id = ?;
CLIENT_CHECK_OPEN_RIDES = SELECT * FROM ride r WHERE r.clientId = ? and r.payed != 1;
GET_ALL_NOT_MATCHED_RIDES=SELECT * FROM ride r INNER JOIN user c ON r.clientId=c.id LEFT JOIN clientcareinstitution cc ON r.clientId=cc.clientId WHERE r.driverId IS NULL and cc.careInstitutionId=?;
GET_ALL_MATCHED_RIDES=SELECT * FROM ride r INNER JOIN user c ON r.clientId=c.id INNER JOIN user d ON r.driverId=d.id LEFT JOIN clientcareinstitution cc ON r.clientId=cc.clientId WHERE cc.careInstitutionId=?;
GET_ALL_RIDES_WITH_INFO=SELECT * FROM ride r INNER JOIN user c ON r.clientId=c.id LEFT JOIN user d ON r.driverId=d.id LEFT JOIN clientcareinstitution cc ON r.clientId=cc.clientId WHERE cc.careInstitutionId=?;



ADD_PREFERREDCLIENT_TO_CLIENT=INSERT INTO `clientdriverpreference` VALUES(?,?);
DRIVER_CHECK_RIDES = SELECT * FROM ride r WHERE r.driverId = ?;
DRIVER_USER_DELETE = DELETE FROM User WHERE id = ?;
DRIVER_DELETE = DELETE FROM driver WHERE driverId = ?;
DRIVER_AVAILABILITY_DELETE = DELETE FROM driveravailability WHERE driverId = ?;
DRIVER_CAR_DELETE = DELETE FROM drivercar WHERE driverId = ?;
DRIVER_CAREINSTITUTION_DELETE = DELETE FROM drivercareinstitution WHERE driverId = ?;
DRIVER_CLIENTPREFERENCE_DELETE = DELETE FROM driverclientpreference WHERE driverId = ?;
DRIVER_LIMITATIONMANAGABLE_DELETE = DELETE FROM driverlimitationmanageable WHERE driverId = ?;
DRIVER_CLIENT_PREFERENCE_DRIVER_DELETE = DELETE FROM clientDriverPreference WHERE driverId = ?;
RIDE_GET_RIDE_WITH_CLIENT =  SELECT * FROM ride r INNER JOIN user c ON r.clientId = c.id where r.id = ?;
RIDE_UPDATE_DRIVERID = update ride set driverId = ? where id = ?;
CLIENT_GET_PREFERED_DRIVERS = SELECT u.* FROM user u inner join clientdriverpreference cl  where cl.driverId = u.id and cl.clientId = ?;
